var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.123,1,2.33]],["body/controllers/AppController.html",[1,3.054,2,2.043,3,0.379,4,0.338,5,3.849,6,0.379,7,1.605,8,5.178,9,1.567,10,0.022,11,1.296,12,1.002,13,0.02,14,0.02]],["title/modules/AppModule.html",[15,2.33,16,2.33]],["body/modules/AppModule.html",[1,2.364,2,1.581,3,0.293,4,0.261,10,0.022,13,0.017,14,0.017,16,4.514,17,1.829,18,2.478,19,2.98,20,2.98,21,2.98,22,3.548,23,3.548,24,3.548,25,3.548,26,2.918,27,2.154,28,2.154,29,3.515,30,2.364,31,3.515]],["title/injectables/AppService.html",[25,2.123,32,1.559]],["body/injectables/AppService.html",[3,0.386,4,0.344,6,0.386,7,1.623,8,5.221,10,0.021,11,1.32,12,1.021,13,0.02,14,0.02,25,2.834,33,2.081,34,3.92]],["title/guards/AuthenticatedGuard.html",[35,2.33,36,2.59]],["body/guards/AuthenticatedGuard.html",[3,0.35,4,0.312,6,0.35,7,1.527,10,0.022,11,1.198,13,0.019,14,0.019,36,3.136,37,3.136,38,3.557,39,3.136,40,2.585,41,4.536,42,3.557,43,4,44,1.359,45,0.926,46,0.471,47,0.926,48,3.136,49,3.557]],["title/classes/HttpExceptionFilter.html",[50,1.054,51,2.59]],["body/classes/HttpExceptionFilter.html",[3,0.339,4,0.302,6,0.339,7,1.495,10,0.021,11,1.159,13,0.018,14,0.018,44,1.315,45,0.896,46,0.456,47,0.896,51,3.034,52,1.315,53,3.441,54,3.441,55,4.059,56,4.059,57,5.238,58,4.059,59,5.238,60,5.238,61,5.238,62,4.059,63,2.73]],["title/injectables/JwtAuthGuard.html",[32,1.559,64,2.59]],["body/injectables/JwtAuthGuard.html",[3,0.417,4,0.372,10,0.021,13,0.021,14,0.021,33,2.248,64,3.734,65,3.734,66,4.235]],["title/interfaces/JwtPayload.html",[67,2.59,68,2.33]],["body/interfaces/JwtPayload.html",[3,0.379,4,0.338,6,0.379,10,0.021,12,1.241,13,0.02,14,0.02,46,0.51,68,3.054,69,4.54,70,3.849,71,3.849,72,1.413,73,3.439]],["title/injectables/JwtStrategy.html",[32,1.559,74,2.123]],["body/injectables/JwtStrategy.html",[3,0.323,4,0.288,6,0.323,7,1.449,10,0.022,11,1.105,13,0.018,14,0.018,33,1.741,40,2.453,44,1.645,45,1.121,46,0.57,47,1.121,49,3.281,65,2.893,68,3.415,74,2.371,75,3.281,76,5.078,77,2.371,78,3.281,79,3.415,80,3.281,81,3.87,82,3.281]],["title/injectables/LoggerMiddleware.html",[32,1.559,83,2.59]],["body/injectables/LoggerMiddleware.html",[3,0.304,4,0.271,6,0.304,7,1.393,10,0.021,11,1.04,13,0.017,14,0.017,33,1.639,44,1.18,45,0.804,46,0.409,47,0.804,63,2.451,72,1.226,83,2.723,84,3.089,85,4.879,86,4.136,87,3.282,88,4.879,89,3.643,90,4.879,91,4.879,92,4.879,93,4.136,94,4.879,95,3.643,96,1.896,97,2.051,98,2.233,99,3.643]],["title/classes/LoginUserDto.html",[50,1.054,100,2.123]],["body/classes/LoginUserDto.html",[3,0.311,4,0.277,6,0.311,9,1.709,10,0.023,12,1.228,13,0.017,14,0.017,46,0.625,47,1.093,52,1.207,72,1.245,73,3.132,86,5.025,100,2.283,101,3.158,102,3.158,103,2.392,104,4.158,105,4.198,106,3.701]],["title/classes/Order.html",[50,1.054,107,2.123]],["body/classes/Order.html",[3,0.315,4,0.281,6,0.315,9,1.935,10,0.023,12,0.835,13,0.017,14,0.017,46,0.629,52,1.225,72,1.257,96,1.968,107,2.317,108,2.544,109,2.603,110,2.916,111,3.364,112,2.544,113,3.739,114,3.206,115,2.816,116,3.206]],["title/controllers/OrderController.html",[0,2.123,117,2.33]],["body/controllers/OrderController.html",[2,1.689,3,0.313,4,0.279,6,0.313,7,1.42,9,1.718,10,0.023,11,1.42,13,0.017,14,0.017,40,2.872,44,1.216,45,0.828,46,0.421,47,0.828,107,2.3,117,2.524,118,3.182,119,2.805,120,4.219,121,4.733,122,3.753,123,3.421,124,3.753,125,2.59]],["title/classes/OrderDto.html",[50,1.054,123,2.123]],["body/classes/OrderDto.html",[3,0.35,4,0.312,6,0.35,10,0.022,12,0.926,13,0.019,14,0.019,46,0.662,47,1.181,52,1.359,72,1.345,109,2.784,110,3.066,111,3.599,115,2.362,123,2.571,126,3.557]],["title/modules/OrderModule.html",[15,2.33,22,2.123]],["body/modules/OrderModule.html",[2,1.888,3,0.35,4,0.312,10,0.021,13,0.019,14,0.019,17,2.183,18,2.784,22,3.928,26,3.279,27,2.571,28,2.571,30,2.822,117,2.822,127,3.557,128,3.557,129,3.802,130,4.196]],["title/injectables/OrderService.html",[32,1.559,129,2.123]],["body/injectables/OrderService.html",[3,0.281,4,0.251,6,0.281,7,1.321,10,0.022,11,1.321,13,0.016,14,0.016,33,1.517,40,2.749,44,1.5,45,1.022,46,0.52,47,1.022,72,1.164,77,2.066,79,3.828,87,3.114,96,1.755,97,1.899,98,2.066,120,3.925,121,4.482,123,2.837,125,2.409,129,2.066,131,2.859,132,3.372,133,3.925,134,3.372,135,3.372,136,3.372]],["title/classes/Products.html",[50,1.054,110,1.803]],["body/classes/Products.html",[3,0.269,4,0.24,6,0.269,9,2.025,10,0.024,12,1.232,13,0.016,14,0.016,46,0.659,52,1.043,72,1.127,109,2.333,110,1.675,111,3.016,112,2.165,113,3.856,115,3.141,137,2.165,138,2.748,139,3.801,140,3.801,141,2.729,142,4.374,143,4.73,144,2.729]],["title/controllers/ProductsController.html",[0,2.123,145,2.33]],["body/controllers/ProductsController.html",[2,1.139,3,0.211,4,0.188,6,0.211,7,1.076,9,1.843,10,0.023,11,1.524,12,1.235,13,0.013,14,0.013,40,2.993,44,1.617,45,1.102,46,0.561,47,1.102,103,2.177,110,1.318,119,1.893,125,2.778,145,1.703,146,2.147,147,3.197,148,3.197,149,3.82,150,3.197,151,3.197,152,2.147,153,3.552,154,3.82,155,2.532,156,2.532,157,2.147,158,2.532,159,2.532,160,2.147,161,2.532]],["title/classes/ProductsDto.html",[50,1.054,153,2.123]],["body/classes/ProductsDto.html",[3,0.274,4,0.244,6,0.274,9,1.8,10,0.023,12,1.151,13,0.016,14,0.016,45,1.003,46,0.663,47,1.003,52,1.064,72,1.142,105,3.853,106,2.454,109,2.365,111,3.784,115,3.168,138,2.785,139,4.77,140,3.853,153,2.012,162,2.783,163,4.545,164,3.283,165,4.545,166,3.283]],["title/modules/ProductsModule.html",[15,2.33,23,2.123]],["body/modules/ProductsModule.html",[2,1.689,3,0.313,4,0.279,7,1.071,10,0.022,11,1.071,13,0.017,14,0.017,17,1.953,18,2.59,23,3.791,26,3.05,27,2.3,28,2.3,30,2.524,44,1.216,45,0.828,46,0.421,47,0.828,63,2.524,145,2.524,167,3.182,168,3.182,169,3.643,170,3.753,171,3.753,172,3.753,173,4.976,174,3.753]],["title/injectables/ProductsService.html",[32,1.559,169,2.123]],["body/injectables/ProductsService.html",[3,0.211,4,0.188,6,0.211,7,1.076,10,0.022,11,1.524,12,1.235,13,0.013,14,0.013,33,1.139,40,2.993,44,1.729,45,1.178,46,0.599,47,1.178,72,0.948,77,1.552,79,2.536,87,2.536,96,1.318,97,1.426,98,1.552,103,1.223,125,2.778,133,2.147,147,3.197,148,3.197,149,3.82,150,3.197,151,3.197,152,2.147,153,3.552,160,2.147,169,1.552,175,2.147,176,2.532,177,2.532,178,3.771,179,2.532,180,2.532]],["title/classes/Profile.html",[50,1.054,181,1.951]],["body/classes/Profile.html",[3,0.289,4,0.258,6,0.289,9,2.079,10,0.024,12,1.271,13,0.016,14,0.016,46,0.676,52,1.123,72,1.186,109,2.455,112,2.331,115,1.951,141,4.88,181,1.951,182,2.331,183,3.999,184,3.999,185,3.999,186,3.999]],["title/classes/ProfileDto.html",[50,1.054,187,2.59]],["body/classes/ProfileDto.html",[3,0.304,4,0.271,6,0.304,9,1.258,10,0.023,12,1.297,13,0.017,14,0.017,46,0.708,47,1.077,52,1.18,72,1.226,109,2.539,115,2.051,183,4.136,184,4.136,185,4.136,186,4.136,187,2.723,188,3.089,189,3.097,190,3.643]],["title/injectables/ResponseInterceptor.html",[32,1.559,191,2.59]],["body/injectables/ResponseInterceptor.html",[3,0.344,4,0.307,6,0.344,7,1.511,10,0.021,11,1.178,13,0.018,14,0.018,33,1.857,43,3.957,44,1.337,45,0.911,46,0.463,47,0.911,48,3.084,93,4.488,191,3.084,192,3.498,193,3.498,194,5.294,195,4.126,196,5.294,197,3.498]],["title/guards/RolesGuard.html",[35,2.33,198,2.59]],["body/guards/RolesGuard.html",[3,0.302,4,0.269,6,0.302,7,1.386,10,0.022,11,1.032,13,0.017,14,0.017,35,2.433,37,2.704,39,2.704,41,4.116,42,3.066,43,3.629,44,1.573,45,1.072,46,0.545,47,1.072,48,2.704,77,2.216,125,1.882,138,2.216,197,3.066,198,2.704,199,3.066,200,3.617,201,2.216,202,3.066,203,3.617,204,2.433,205,3.617,206,5.481,207,3.617]],["title/classes/SessionSerializer.html",[50,1.054,208,2.59]],["body/classes/SessionSerializer.html",[3,0.295,4,0.263,6,0.295,7,1.366,10,0.023,11,1.366,12,0.781,13,0.017,14,0.017,44,1.55,45,1.056,46,0.537,47,1.056,52,1.147,63,3.219,82,3.001,204,2.381,208,2.646,209,3.001,210,3.54,211,3.54,212,4.785,213,4.785,214,3.54,215,5.807,216,4.785,217,3.54,218,4.057,219,3.54,220,3.54]],["title/classes/SignUpDto.html",[50,1.054,221,2.123]],["body/classes/SignUpDto.html",[3,0.269,4,0.24,6,0.269,9,1.926,10,0.023,12,1.295,13,0.016,14,0.016,45,0.99,46,0.7,47,1.232,52,1.043,72,1.127,73,2.905,103,2.166,104,3.352,106,2.407,181,2.905,201,3.161,221,1.973,222,2.729,223,3.352,224,3.219,225,2.729,226,4.484]],["title/classes/UpdateUserDto.html",[50,1.054,227,2.59]],["body/classes/UpdateUserDto.html",[3,0.356,4,0.318,6,0.356,9,1.473,10,0.022,12,1.194,13,0.019,14,0.019,45,1.194,46,0.607,47,1.194,52,1.382,72,1.359,103,2.613,225,3.618,227,3.19,228,3.618]],["title/classes/Users.html",[50,1.054,189,1.951]],["body/classes/Users.html",[3,0.211,4,0.188,6,0.211,9,2.001,10,0.023,12,1.344,13,0.013,14,0.013,45,0.832,46,0.651,52,0.82,72,0.948,73,2.123,96,1.318,104,2.819,109,1.962,112,1.703,113,4.183,114,2.147,142,4.232,143,4.525,144,2.147,181,2.537,189,1.426,201,3.059,223,2.819,229,1.703,230,2.532,231,2.532,232,5.956,233,3.771,234,3.771,235,4.505,236,2.532,237,2.532,238,2.147]],["title/controllers/UsersController.html",[0,2.123,239,2.33]],["body/controllers/UsersController.html",[2,1.039,3,0.193,4,0.172,6,0.193,7,1.004,9,1.866,10,0.023,11,1.542,12,1.193,13,0.012,14,0.012,40,3.014,44,1.661,45,1.132,46,0.576,47,1.132,100,2.611,103,2.059,119,1.726,125,2.812,154,2.982,157,1.957,189,1.3,221,2.611,239,1.553,240,1.957,241,2.982,242,3.613,243,2.982,244,2.982,245,2.982,246,2.982,247,2.309,248,2.309,249,2.309,250,2.309,251,1.957,252,2.309,253,1.957,254,2.309,255,1.957,256,2.92,257,2.309]],["title/classes/UsersDTO.html",[50,1.054,256,2.123]],["body/classes/UsersDTO.html",[3,0.341,4,0.304,6,0.341,10,0.023,12,1.357,13,0.018,14,0.018,45,1.162,46,0.69,52,1.326,72,1.323,73,2.965,103,2.544,223,3.936,256,2.508,258,3.469]],["title/modules/UsersModule.html",[15,2.33,24,2.123]],["body/modules/UsersModule.html",[2,1.783,3,0.331,4,0.295,10,0.021,13,0.018,14,0.018,17,2.062,18,2.684,24,4.027,26,3.16,27,2.428,28,2.428,30,2.665,74,3.721,239,2.665,259,3.359,260,3.359,261,3.721,262,3.962]],["title/injectables/UsersService.html",[32,1.559,261,2.123]],["body/injectables/UsersService.html",[3,0.192,4,0.171,6,0.192,7,1.001,10,0.022,11,1.54,12,1.191,13,0.012,14,0.012,33,1.034,40,3.011,44,1.747,45,1.191,46,0.606,47,1.191,72,0.881,77,1.408,78,1.948,79,2.358,80,1.948,87,2.358,96,1.196,97,1.294,98,1.408,100,2.604,103,1.11,125,2.807,221,2.604,241,2.972,242,3.602,243,2.972,244,2.972,245,2.972,246,2.972,251,1.948,253,1.948,255,1.948,256,2.913,261,1.408,263,1.948,264,4.754,265,2.298,266,3.505,267,2.298,268,2.298]],["title/coverage.html",[269,3.525]],["body/coverage.html",[0,2.307,1,1.025,4,0.113,5,1.292,10,0.023,13,0.009,14,0.009,25,0.934,32,2.244,34,1.292,35,1.7,36,1.14,38,1.292,39,1.889,46,0.171,50,1.733,51,1.14,53,1.292,54,1.292,64,1.14,65,1.889,66,1.292,67,1.14,68,1.025,70,1.292,71,1.292,74,0.934,75,1.292,83,1.14,84,1.292,98,0.934,100,0.934,101,1.292,102,1.292,107,0.934,108,1.7,110,0.793,117,1.025,118,1.292,123,0.934,126,1.292,129,0.934,131,1.292,137,1.7,145,1.025,146,1.292,153,0.934,162,1.292,169,0.934,175,1.292,181,0.858,182,1.7,187,1.14,188,1.292,189,0.858,191,1.14,192,1.292,193,1.292,198,1.14,199,1.292,208,1.14,209,1.292,218,1.292,221,0.934,222,1.292,227,1.14,228,1.292,229,1.7,239,1.025,240,1.292,256,0.934,258,1.292,261,0.934,263,1.292,269,1.14,270,1.524,271,1.524,272,1.524,273,6.633,274,4.5,275,4.987,276,4.174,277,1.524,278,1.524,279,1.292,280,4.766,281,1.292,282,1.524,283,1.524,284,2.142,285,1.292,286,1.292,287,1.292,288,1.292,289,3.237,290,1.292,291,2.527,292,3.765,293,1.292,294,3.237,295,2.527,296,1.292,297,1.292,298,1.524,299,1.524,300,1.524]],["title/dependencies.html",[18,2.167,301,2.458]],["body/dependencies.html",[10,0.024,13,0.013,14,0.013,18,1.318,50,1.147,302,2.532,303,5.338,304,2.532,305,2.532,306,2.532,307,2.532,308,2.532,309,2.532,310,2.532,311,2.532,312,2.532,313,2.532,314,2.532,315,2.532,316,2.532,317,4.505,318,2.532,319,2.532,320,2.532,321,2.532,322,2.532,323,2.532,324,2.532,325,2.532,326,3.771,327,3.771,328,2.532,329,2.532,330,2.532,331,2.532,332,2.532,333,2.532,334,2.532,335,2.532,336,2.532,337,2.532,338,2.532,339,2.532,340,4.505,341,2.532,342,2.532,343,2.532,344,2.532,345,2.532,346,2.532,347,2.532,348,2.532,349,2.532,350,2.532,351,2.532,352,2.532,353,2.532,354,2.532,355,2.532,356,2.532,357,2.532,358,2.532,359,2.532,360,2.532,361,2.532]],["title/miscellaneous/enumerations.html",[362,1.401,363,3.53]],["body/miscellaneous/enumerations.html",[6,0.344,10,0.023,13,0.018,14,0.018,97,3.472,201,3.244,202,4.488,204,3.561,362,1.993,363,3.498,364,4.126,365,5.294,366,4.126,367,4.126,368,4.126,369,4.488,370,5.294]],["title/miscellaneous/functions.html",[362,1.401,371,3.53]],["body/miscellaneous/functions.html",[6,0.409,10,0.021,13,0.021,14,0.021,287,4.152,288,5.353,362,2.366,371,4.152,372,4.897]],["title/index.html",[6,0.242,373,2.9,374,2.9]],["body/index.html",[10,0.023,13,0.014,14,0.014,138,1.644,269,2.005,375,2.682,376,2.682,377,3.935,378,2.682,379,2.682,380,2.682,381,2.274,382,2.682,383,2.682,384,4.66,385,2.682,386,2.682,387,2.682,388,2.682,389,5.904,390,2.682,391,2.682,392,2.682,393,5.714,394,2.682,395,2.682,396,3.935,397,2.682,398,2.682,399,2.682,400,2.682,401,3.935,402,3.935,403,2.682,404,2.682,405,2.682,406,3.935,407,3.935,408,2.682,409,2.682,410,2.682,411,2.682,412,2.682,413,2.682,414,2.274,415,2.682,416,2.682,417,2.682,418,2.682,419,2.274,420,2.682,421,2.682,422,2.682,423,2.682,424,2.682,425,2.274,426,2.682,427,2.682,428,2.682,429,2.682,430,2.682,431,2.682,432,2.274]],["title/modules.html",[17,2.454]],["body/modules.html",[10,0.019,13,0.019,14,0.019,16,2.921,17,2.26,22,2.661,23,2.661,24,2.661,414,5.326,433,6.283,434,6.283,435,6.283]],["title/overview.html",[436,3.998]],["body/overview.html",[2,1.305,10,0.022,13,0.015,14,0.015,16,4.301,17,1.509,18,2.167,19,2.459,20,2.459,21,2.459,22,3.456,23,3.456,24,3.706,25,2.986,26,2.552,27,1.778,28,1.778,33,1.305,37,2.168,52,0.94,67,2.168,74,2.986,116,2.459,127,2.459,128,2.459,129,2.986,167,2.459,168,2.459,169,2.986,259,2.459,260,2.459,261,2.986,436,2.459,437,4.165,438,2.901,439,2.901,440,2.901]],["title/properties.html",[72,1.047,301,2.458]],["body/properties.html",[10,0.024,13,0.02,14,0.02,72,1.196,138,2.915,425,4.033,432,4.033,441,4.757,442,4.757,443,4.757]],["title/miscellaneous/typealiases.html",[362,1.401,444,4.164]],["body/miscellaneous/typealiases.html",[6,0.365,10,0.019,13,0.019,14,0.019,46,0.492,108,2.946,137,2.946,182,2.946,229,2.946,362,2.116,445,4.38,446,5.498,447,3.714,448,5.498,449,3.714,450,5.498,451,3.714,452,5.498,453,3.714]],["title/miscellaneous/variables.html",[362,1.401,454,3.53]],["body/miscellaneous/variables.html",[6,0.149,10,0.023,12,0.394,13,0.01,14,0.01,45,0.914,46,0.323,73,1.62,96,2.654,97,2.987,107,2.782,108,1.202,110,2.524,137,1.202,181,1.006,182,1.202,189,1.62,201,1.763,204,2.43,229,1.202,238,1.515,279,1.515,281,3.062,284,1.515,285,3.849,286,2.439,290,2.439,293,2.439,296,2.439,297,2.439,362,0.863,369,2.439,381,1.515,419,1.515,447,1.515,449,1.515,451,1.515,453,1.515,454,1.515,455,1.787,456,2.877,457,1.787,458,1.787,459,1.787,460,1.787,461,1.787,462,1.787,463,1.787,464,1.787,465,1.787,466,1.787,467,1.787,468,1.787,469,1.787,470,1.787,471,2.877,472,1.787,473,1.787,474,1.787,475,1.787,476,1.787,477,1.787,478,4.54,479,1.787,480,1.787,481,4.141,482,1.787,483,1.787,484,1.787,485,1.787,486,1.787,487,1.787,488,1.787,489,1.787,490,3.612,491,1.787,492,3.612,493,1.787,494,2.877,495,1.787,496,1.787,497,1.787,498,1.787,499,1.787,500,3.612,501,1.787,502,1.787,503,2.877,504,1.787,505,1.787,506,1.787,507,1.787,508,1.787,509,1.787,510,1.787,511,1.787,512,1.787,513,1.787,514,1.787,515,1.787,516,1.787,517,1.787,518,1.787,519,1.787]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":442,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":335,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":359,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":333,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":341,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":275,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":274,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":276,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":116,"title":{},"body":{"classes/Order.html":{},"overview.html":{}}}],["1.0.0",{"_index":345,"title":{},"body":{"dependencies.html":{}}}],["1.17.3",{"_index":337,"title":{},"body":{"dependencies.html":{}}}],["1.3.1",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":278,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["11000",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13",{"_index":439,"title":{},"body":{"overview.html":{}}}],["2",{"_index":440,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":331,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["23502",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23503",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["3600s",{"_index":460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":437,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":343,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":361,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":339,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":438,"title":{},"body":{"overview.html":{}}}],["8.8.0",{"_index":347,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":235,"title":{},"body":{"classes/Users.html":{}}}],["9!#$%&'*+/=?^_",{"_index":233,"title":{},"body":{"classes/Users.html":{}}}],["9.0.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["9](?:[a",{"_index":234,"title":{},"body":{"classes/Users.html":{}}}],["9])?\\.)+[a",{"_index":236,"title":{},"body":{"classes/Users.html":{}}}],["_id",{"_index":109,"title":{},"body":{"classes/Order.html":{},"classes/OrderDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"classes/Users.html":{}}}],["addedd",{"_index":506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":202,"title":{},"body":{"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{}}}],["again",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":445,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":415,"title":{},"body":{"index.html":{}}}],["app",{"_index":391,"title":{},"body":{"index.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":383,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":16,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":25,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":61,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":40,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["auth.guard.ts",{"_index":66,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth_failed",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticatedguard",{"_index":36,"title":{"guards/AuthenticatedGuard.html":{}},"body":{"guards/AuthenticatedGuard.html":{},"coverage.html":{}}}],["author",{"_index":425,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":369,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":416,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":207,"title":{},"body":{"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":288,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":435,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":433,"title":{},"body":{"modules.html":{}}}],["building",{"_index":378,"title":{},"body":{"index.html":{}}}],["cache",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["callhandler",{"_index":196,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["canactivate",{"_index":41,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":42,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}}}],["catch",{"_index":57,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":58,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["city",{"_index":183,"title":{},"body":{"classes/Profile.html":{},"classes/ProfileDto.html":{}}}],["class",{"_index":50,"title":{"classes/HttpExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"classes/OrderDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"classes/UsersDTO.html":{}},"body":{"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":52,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"classes/OrderDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"classes/UsersDTO.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":127,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_providers",{"_index":128,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":167,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":168,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":259,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":260,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code_already_exist",{"_index":461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code_not_delete",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code_not_null",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["code_role",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common",{"_index":458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configure",{"_index":171,"title":{},"body":{"modules/ProductsModule.html":{}}}],["configure(consumer",{"_index":172,"title":{},"body":{"modules/ProductsModule.html":{}}}],["constants",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constructor",{"_index":77,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"guards/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["constructor(ordermodel",{"_index":132,"title":{},"body":{"injectables/OrderService.html":{}}}],["constructor(productsmodel",{"_index":176,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(reflector",{"_index":205,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(usersmodel",{"_index":78,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["consumer",{"_index":174,"title":{},"body":{"modules/ProductsModule.html":{}}}],["context",{"_index":48,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"coverage.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["contstans",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":269,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":200,"title":{},"body":{"guards/RolesGuard.html":{}}}],["created",{"_index":488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createorder",{"_index":120,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["createorder(orderdto",{"_index":122,"title":{},"body":{"controllers/OrderController.html":{}}}],["createorder(undefined",{"_index":135,"title":{},"body":{"injectables/OrderService.html":{}}}],["createproduct",{"_index":147,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(productsdto",{"_index":152,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["credentials",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":96,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["delete_success",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleted",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deleteproduct",{"_index":148,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(id",{"_index":156,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(productid",{"_index":177,"title":{},"body":{"injectables/ProductsService.html":{}}}],["deleteuser",{"_index":241,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(id",{"_index":247,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(userid",{"_index":265,"title":{},"body":{"injectables/UsersService.html":{}}}],["dependencies",{"_index":18,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":138,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"guards/RolesGuard.html":{},"index.html":{},"properties.html":{}}}],["deserializeuser",{"_index":212,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["deserializeuser(payload",{"_index":214,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["development",{"_index":392,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":215,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["e2e",{"_index":403,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":379,"title":{},"body":{"index.html":{}}}],["email",{"_index":73,"title":{},"body":{"interfaces/JwtPayload.html":{},"classes/LoginUserDto.html":{},"classes/SignUpDto.html":{},"classes/Users.html":{},"classes/UsersDTO.html":{},"miscellaneous/variables.html":{}}}],["email_exist",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email_not_null",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emitter",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["empty",{"_index":106,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/ProductsDto.html":{},"classes/SignUpDto.html":{}}}],["empty'})@isint({message",{"_index":163,"title":{},"body":{"classes/ProductsDto.html":{}}}],["enum",{"_index":238,"title":{},"body":{"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["enumerations",{"_index":363,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":216,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["error,payload",{"_index":217,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["error,user",{"_index":220,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["exception",{"_index":62,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":56,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["executioncontext",{"_index":43,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["exists",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expires_in",{"_index":459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":210,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["failed",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fetched",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filter.ts",{"_index":54,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["found",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":377,"title":{},"body":{"index.html":{}}}],["function",{"_index":218,"title":{},"body":{"classes/SessionSerializer.html":{},"coverage.html":{}}}],["functions",{"_index":371,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":159,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getallorders",{"_index":121,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["getallproducts",{"_index":149,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getallusers",{"_index":242,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["gethello",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproductbyid",{"_index":150,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproductbyid(id",{"_index":158,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproductbyid(productid",{"_index":179,"title":{},"body":{"injectables/ProductsService.html":{}}}],["getting",{"_index":373,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":243,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuserbyid(id",{"_index":249,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(userid",{"_index":267,"title":{},"body":{"injectables/UsersService.html":{}}}],["grow",{"_index":411,"title":{},"body":{"index.html":{}}}],["guard",{"_index":35,"title":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["guard.ts",{"_index":39,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["guards",{"_index":37,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guest",{"_index":203,"title":{},"body":{"guards/RolesGuard.html":{}}}],["here",{"_index":422,"title":{},"body":{"index.html":{}}}],["host",{"_index":60,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":59,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":51,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":429,"title":{},"body":{"index.html":{}}}],["id",{"_index":103,"title":{},"body":{"classes/LoginUserDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["imagecontent",{"_index":184,"title":{},"body":{"classes/Profile.html":{},"classes/ProfileDto.html":{}}}],["implements",{"_index":55,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["imports",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":32,"title":{"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/AppService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["input",{"_index":497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["installation",{"_index":388,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":390,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":194,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":195,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["interceptors.ts",{"_index":193,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["interface",{"_index":67,"title":{"interfaces/JwtPayload.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":69,"title":{},"body":{"interfaces/JwtPayload.html":{}}}],["internal",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internal_server_error",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty({message",{"_index":105,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/ProductsDto.html":{}}}],["isphonenumber",{"_index":190,"title":{},"body":{"classes/ProfileDto.html":{}}}],["isstring()@minlength(3)@maxlength(40",{"_index":225,"title":{},"body":{"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@minlength(4)@maxlength(20",{"_index":226,"title":{},"body":{"classes/SignUpDto.html":{}}}],["isstring({message",{"_index":164,"title":{},"body":{"classes/ProductsDto.html":{}}}],["join",{"_index":418,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":342,"title":{},"body":{"dependencies.html":{}}}],["jwtauthguard",{"_index":64,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtpayload",{"_index":68,"title":{"interfaces/JwtPayload.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":264,"title":{},"body":{"injectables/UsersService.html":{}}}],["jwtstrategy",{"_index":74,"title":{"injectables/JwtStrategy.html":{}},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":426,"title":{},"body":{"index.html":{}}}],["license",{"_index":432,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":407,"title":{},"body":{"index.html":{}}}],["local",{"_index":344,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":87,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["logger(loggermiddleware.name",{"_index":99,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(orderservice.name",{"_index":136,"title":{},"body":{"injectables/OrderService.html":{}}}],["logger(productsservice.name",{"_index":180,"title":{},"body":{"injectables/ProductsService.html":{}}}],["logger(usersservice.name",{"_index":268,"title":{},"body":{"injectables/UsersService.html":{}}}],["loggermiddleware",{"_index":83,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["login",{"_index":244,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["login(loginuserdto",{"_index":251,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["login.dto.ts",{"_index":102,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":100,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["manager",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":231,"title":{},"body":{"classes/Users.html":{}}}],["matching",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength(250)@isemail()@isnotempty({message",{"_index":224,"title":{},"body":{"classes/SignUpDto.html":{}}}],["message",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messages",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":173,"title":{},"body":{"modules/ProductsModule.html":{}}}],["miscellaneous",{"_index":362,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":406,"title":{},"body":{"index.html":{}}}],["mobilenumber",{"_index":185,"title":{},"body":{"classes/Profile.html":{},"classes/ProfileDto.html":{}}}],["mode",{"_index":396,"title":{},"body":{"index.html":{}}}],["model",{"_index":79,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":15,"title":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{}}],["modules",{"_index":17,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":338,"title":{},"body":{"dependencies.html":{}}}],["more",{"_index":421,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":427,"title":{},"body":{"index.html":{}}}],["name",{"_index":45,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":384,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":431,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["nestjs/config",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":98,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["next",{"_index":93,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/ResponseInterceptor.html":{}}}],["nextfunction",{"_index":94,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["node.js",{"_index":376,"title":{},"body":{"index.html":{}}}],["not_found",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notavailable",{"_index":370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["npm",{"_index":389,"title":{},"body":{"index.html":{}}}],["null",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number",{"_index":115,"title":{},"body":{"classes/Order.html":{},"classes/OrderDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{}}}],["object",{"_index":457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectid",{"_index":230,"title":{},"body":{"classes/Users.html":{}}}],["observable",{"_index":197,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{}}}],["open",{"_index":408,"title":{},"body":{"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"injectables/OrderService.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":107,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["order_added_success",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order_name_exist",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order_not_available",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order_not_found",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order_not_null",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ordercontroller",{"_index":117,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderdocuments",{"_index":446,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orderdto",{"_index":123,"title":{"classes/OrderDto.html":{}},"body":{"controllers/OrderController.html":{},"classes/OrderDto.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["ordermodel",{"_index":134,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordermodule",{"_index":22,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orderschema",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderservice",{"_index":129,"title":{"injectables/OrderService.html":{}},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":436,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":301,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":44,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":340,"title":{},"body":{"dependencies.html":{}}}],["passportserializer",{"_index":211,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["password",{"_index":104,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/SignUpDto.html":{},"classes/Users.html":{}}}],["payload",{"_index":82,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/SessionSerializer.html":{}}}],["payload.ts",{"_index":71,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["pg",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":419,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":124,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('login",{"_index":252,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('register",{"_index":254,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":119,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["price",{"_index":139,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{}}}],["private",{"_index":85,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["product",{"_index":165,"title":{},"body":{"classes/ProductsDto.html":{}}}],["product_added_success",{"_index":505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product_name_exist",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product_not_available",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product_not_found",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["product_not_null",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["productid",{"_index":178,"title":{},"body":{"injectables/ProductsService.html":{}}}],["production",{"_index":398,"title":{},"body":{"index.html":{}}}],["productname",{"_index":140,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{}}}],["products",{"_index":110,"title":{"classes/Products.html":{}},"body":{"classes/Order.html":{},"classes/OrderDto.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":145,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsdocuments",{"_index":448,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["productsdto",{"_index":153,"title":{"classes/ProductsDto.html":{}},"body":{"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productsmodel",{"_index":133,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductsService.html":{}}}],["productsmodule",{"_index":23,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsschema",{"_index":293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["productsservice",{"_index":169,"title":{"injectables/ProductsService.html":{}},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":181,"title":{"classes/Profile.html":{}},"body":{"classes/Profile.html":{},"classes/SignUpDto.html":{},"classes/Users.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profile_not_found",{"_index":486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profiledocument",{"_index":450,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["profiledto",{"_index":187,"title":{"classes/ProfileDto.html":{}},"body":{"classes/ProfileDto.html":{},"coverage.html":{}}}],["profileschema",{"_index":296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":375,"title":{},"body":{"index.html":{}}}],["project",{"_index":410,"title":{},"body":{"index.html":{}}}],["promise",{"_index":125,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["prop",{"_index":141,"title":{},"body":{"classes/Products.html":{},"classes/Profile.html":{}}}],["prop({type",{"_index":113,"title":{},"body":{"classes/Order.html":{},"classes/Products.html":{},"classes/Users.html":{}}}],["properties",{"_index":72,"title":{"properties.html":{}},"body":{"interfaces/JwtPayload.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"classes/OrderDto.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["quantity",{"_index":111,"title":{},"body":{"classes/Order.html":{},"classes/OrderDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{}}}],["read",{"_index":420,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":86,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{}}}],["redis",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":206,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":245,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["register(signupdto",{"_index":253,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["repository",{"_index":387,"title":{},"body":{"index.html":{}}}],["req",{"_index":95,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request",{"_index":90,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["required",{"_index":142,"title":{},"body":{"classes/Products.html":{},"classes/Users.html":{}}}],["res",{"_index":91,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":92,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["responseinterceptor",{"_index":191,"title":{"injectables/ResponseInterceptor.html":{}},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["results",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":201,"title":{},"body":{"guards/RolesGuard.html":{},"classes/SignUpDto.html":{},"classes/Users.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles",{"_index":285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.admin)@useguards(jwtauthguard",{"_index":154,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["roles_key",{"_index":286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":198,"title":{"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["rolesguard)@delete(':id",{"_index":157,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["rolesguard)@get",{"_index":248,"title":{},"body":{"controllers/UsersController.html":{}}}],["rolesguard)@post",{"_index":155,"title":{},"body":{"controllers/ProductsController.html":{}}}],["rolesguard)@put(':id",{"_index":161,"title":{},"body":{"controllers/ProductsController.html":{}}}],["run",{"_index":393,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":380,"title":{},"body":{"index.html":{}}}],["schemafactory.createforclass(order",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(products",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(profile",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(users",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["serializeuser",{"_index":213,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":219,"title":{},"body":{"classes/SessionSerializer.html":{}}}],["server",{"_index":381,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["session",{"_index":336,"title":{},"body":{"dependencies.html":{}}}],["sessionserializer",{"_index":208,"title":{"classes/SessionSerializer.html":{}},"body":{"classes/SessionSerializer.html":{},"coverage.html":{}}}],["setmetadata(roles_key",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":382,"title":{},"body":{"index.html":{}}}],["signupdto",{"_index":221,"title":{"classes/SignUpDto.html":{}},"body":{"classes/SignUpDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["source",{"_index":409,"title":{},"body":{"index.html":{}}}],["sponsors",{"_index":413,"title":{},"body":{"index.html":{}}}],["src/.../constans.ts",{"_index":455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":372,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../order.model.ts",{"_index":447,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../products.model.ts",{"_index":449,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../profile.model.ts",{"_index":451,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.model.ts",{"_index":453,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":34,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/authenticated",{"_index":38,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"coverage.html":{}}}],["src/auth/jwt",{"_index":65,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/role",{"_index":199,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts",{"_index":209,"title":{},"body":{"classes/SessionSerializer.html":{},"coverage.html":{}}}],["src/common/constans/constans.ts",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/roles.decorator.ts",{"_index":284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/enum/role.enum.ts",{"_index":367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/enum/status.enum.ts",{"_index":368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/exceptionfilter/exception",{"_index":53,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/response",{"_index":192,"title":{},"body":{"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/middleware/logger.middleware.ts",{"_index":84,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/payload/jwt",{"_index":70,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/order.dto.ts",{"_index":126,"title":{},"body":{"classes/OrderDto.html":{},"coverage.html":{}}}],["src/order/order.controller.ts",{"_index":118,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.model.ts",{"_index":108,"title":{},"body":{"classes/Order.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/order/order.module.ts",{"_index":130,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":131,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/products/dto/products.dto.ts",{"_index":162,"title":{},"body":{"classes/ProductsDto.html":{},"coverage.html":{}}}],["src/products/products.controller.ts",{"_index":146,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.model.ts",{"_index":137,"title":{},"body":{"classes/Products.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/products/products.module.ts",{"_index":170,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":175,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/users/dto/profile.dto.ts",{"_index":188,"title":{},"body":{"classes/ProfileDto.html":{},"coverage.html":{}}}],["src/users/dto/user",{"_index":101,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/users/dto/user.signup.dto.ts",{"_index":222,"title":{},"body":{"classes/SignUpDto.html":{},"coverage.html":{}}}],["src/users/dto/user.update.dto.ts",{"_index":228,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/users.dto.ts",{"_index":258,"title":{},"body":{"classes/UsersDTO.html":{},"coverage.html":{}}}],["src/users/model/profile.model.ts",{"_index":182,"title":{},"body":{"classes/Profile.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/model/users.model.ts",{"_index":229,"title":{},"body":{"classes/Users.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":240,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":262,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":263,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["start",{"_index":394,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":397,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":399,"title":{},"body":{"index.html":{}}}],["started",{"_index":374,"title":{"index.html":{}},"body":{}}],["starter",{"_index":386,"title":{},"body":{"index.html":{}}}],["statements",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":423,"title":{},"body":{"index.html":{}}}],["store",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["stored",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy.ts",{"_index":75,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["street",{"_index":186,"title":{},"body":{"classes/Profile.html":{},"classes/ProfileDto.html":{}}}],["string",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/JwtPayload.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"classes/OrderDto.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string'})@isnotempty({message",{"_index":166,"title":{},"body":{"classes/ProductsDto.html":{}}}],["successfully",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":414,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":434,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":402,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":405,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":404,"title":{},"body":{"index.html":{}}}],["tests",{"_index":401,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":412,"title":{},"body":{"index.html":{}}}],["touch",{"_index":424,"title":{},"body":{"index.html":{}}}],["transform",{"_index":112,"title":{},"body":{"classes/Order.html":{},"classes/Products.html":{},"classes/Profile.html":{},"classes/Users.html":{}}}],["transformer",{"_index":332,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":143,"title":{},"body":{"classes/Products.html":{},"classes/Users.html":{}}}],["try",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitter",{"_index":430,"title":{},"body":{"index.html":{}}}],["type",{"_index":46,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderDto.html":{},"injectables/OrderService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/Profile.html":{},"classes/ProfileDto.html":{},"injectables/ResponseInterceptor.html":{},"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"classes/SignUpDto.html":{},"classes/UpdateUserDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":444,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":358,"title":{},"body":{"dependencies.html":{}}}],["types",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":385,"title":{},"body":{"index.html":{}}}],["ui",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":114,"title":{},"body":{"classes/Order.html":{},"classes/Users.html":{}}}],["undefined})@type(undefined",{"_index":237,"title":{},"body":{"classes/Users.html":{}}}],["unique",{"_index":144,"title":{},"body":{"classes/Products.html":{},"classes/Users.html":{}}}],["unit",{"_index":400,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":49,"title":{},"body":{"guards/AuthenticatedGuard.html":{},"injectables/JwtStrategy.html":{}}}],["unlicensed",{"_index":443,"title":{},"body":{"properties.html":{}}}],["update_success",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updated",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateproduct",{"_index":151,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(id",{"_index":160,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateuser",{"_index":246,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":255,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":227,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["use",{"_index":88,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":89,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useguards(jwtauthguard)@get(':id",{"_index":250,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@put(':id",{"_index":257,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":204,"title":{},"body":{"guards/RolesGuard.html":{},"classes/SessionSerializer.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user_create",{"_index":487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_fetch_success",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_invalid_role",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_not_found",{"_index":485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userid",{"_index":266,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":223,"title":{},"body":{"classes/SignUpDto.html":{},"classes/Users.html":{},"classes/UsersDTO.html":{}}}],["users",{"_index":189,"title":{"classes/Users.html":{}},"body":{"classes/ProfileDto.html":{},"classes/Users.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":239,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersdocuments",{"_index":452,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["usersdto",{"_index":256,"title":{"classes/UsersDTO.html":{}},"body":{"controllers/UsersController.html":{},"classes/UsersDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["usersmodel",{"_index":80,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["usersmodule",{"_index":24,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersschema",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersservice",{"_index":261,"title":{"injectables/UsersService.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":76,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":81,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate_message",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validation",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":334,"title":{},"body":{"dependencies.html":{}}}],["value",{"_index":97,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/OrderService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":454,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":441,"title":{},"body":{"properties.html":{}}}],["void",{"_index":63,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"modules/ProductsModule.html":{},"classes/SessionSerializer.html":{}}}],["watch",{"_index":395,"title":{},"body":{"index.html":{}}}],["website",{"_index":428,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":417,"title":{},"body":{"index.html":{}}}],["z0",{"_index":232,"title":{},"body":{"classes/Users.html":{}}}],["zoom",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["zxcvbn",{"_index":360,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nOrderModule\n\nOrderModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OrderModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticatedGuard.html":{"url":"guards/AuthenticatedGuard.html","title":"guard - AuthenticatedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticatedGuard\n\n\n\n        \n            Info\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/authenticated-guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptionFilter/exception-filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/payload/jwt-payload.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(LoggerMiddleware.name)\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email can not empty'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Password can not empty'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                products\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Products\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, default: 1})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                getAllOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOrder(orderDto: OrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderDto\n                                    \n                                                OrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOrders()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderDto.html":{"url":"classes/OrderDto.html","title":"class - OrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                products\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Products\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nOrderService\n\nOrderService\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                getAllOrders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(OrderModel: Model, ProductsModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        OrderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ProductsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOrder(undefined: OrderDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                OrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllOrders\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllOrders()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OrderService.name)\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Products.html":{"url":"classes/Products.html","title":"class - Products","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Products\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                price\n                            \n                            \n                                productName\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Number, required: true})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProductById\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(productsDto: ProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.Admin)@UseGuards(JwtAuthGuard, RolesGuard)@Post()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsDto\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.Admin)@UseGuards(JwtAuthGuard, RolesGuard)@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, productsDto: ProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.Admin)@UseGuards(JwtAuthGuard, RolesGuard)@Put(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productsDto\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsDto.html":{"url":"classes/ProductsDto.html","title":"class - ProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/products.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                description\n                            \n                            \n                                price\n                            \n                            \n                                productName\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Price can not empty'})@IsInt({message: 'Price must be number'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'Product name must be String'})@IsNotEmpty({message: 'Product name can not empty'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quantity can not empty'})@IsInt({message: 'Quantity must be number'})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService\n\nProductsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProductById\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsModel: Model)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(productsDto: ProductsDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productsDto\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(productId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProductById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(productId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, productsDto: ProductsDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    productsDto\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProductsService.name)\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Profile.html":{"url":"classes/Profile.html","title":"class - Profile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Profile\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/model/profile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                city\n                            \n                            \n                                imageContent\n                            \n                            \n                                mobileNumber\n                            \n                            \n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileDto.html":{"url":"classes/ProfileDto.html","title":"class - ProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/profile.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                city\n                            \n                            \n                                imageContent\n                            \n                            \n                                mobileNumber\n                            \n                            \n                                street\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mobileNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber()\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptor.html":{"url":"injectables/ResponseInterceptor.html","title":"injectable - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response-interceptors.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/role-guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Create role guard for admin or guest user\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionSerializer.html":{"url":"classes/SessionSerializer.html","title":"class - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionSerializer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deserializeUser\n                        \n                    \n                \n            \n            \n                \ndeserializeUser(payload: any, done: (err: Error,payload: string) => void)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serializeUser\n                        \n                    \n                \n            \n            \n                \nserializeUser(user: any, done: (err: Error,user: any) => void)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignUpDto.html":{"url":"classes/SignUpDto.html","title":"class - SignUpDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignUpDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.signUp.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                profile\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MaxLength(250)@IsEmail()@IsNotEmpty({message: 'Email can not empty'})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(3)@MaxLength(40)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@MaxLength(20)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(4)@MaxLength(20)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/user.update.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@MinLength(3)@MaxLength(40)\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/model/users.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                profile\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => )\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true, unique: true, match: /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Profile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})@Type(undefined)\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: Role, default: undefined})\n                        \n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, required: true})\n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.Admin)@UseGuards(JwtAuthGuard, RolesGuard)@Delete(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.Admin)@UseGuards(JwtAuthGuard, RolesGuard)@Get()\n                \n            \n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(signUpDto: SignUpDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, usersDTO: UsersDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Put(':id')\n                \n            \n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    usersDTO\n                                    \n                                                UsersDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersDTO.html":{"url":"classes/UsersDTO.html","title":"class - UsersDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersDTO\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersModel: Model, jwtService: JwtService)\n                    \n                \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(userId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(userId: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(signUpDto: SignUpDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signUpDto\n                                    \n                                                SignUpDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUser(id: string, usersDTO: UsersDTO)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    usersDTO\n                                    \n                                                UsersDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(UsersService.name)\n                    \n                \n\n\n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/authenticated-guard.ts\n            \n            guard\n            AuthenticatedGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/role-guard.ts\n            \n            guard\n            RolesGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            class\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/constans/constans.ts\n            \n            variable\n            MESSAGES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/exceptionFilter/exception-filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/response-interceptors.ts\n            \n            injectable\n            ResponseInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/payload/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/order.dto.ts\n            \n            class\n            OrderDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/order.model.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.model.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/products/dto/products.dto.ts\n            \n            class\n            ProductsDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.model.ts\n            \n            class\n            Products\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/products/products.model.ts\n            \n            variable\n            ProductsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/profile.dto.ts\n            \n            class\n            ProfileDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/user-login.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/user.signUp.dto.ts\n            \n            class\n            SignUpDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/user.update.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/users.dto.ts\n            \n            class\n            UsersDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/model/profile.model.ts\n            \n            class\n            Profile\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/model/profile.model.ts\n            \n            variable\n            ProfileSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/model/users.model.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/model/users.model.ts\n            \n            variable\n            UsersSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mongoose : ^9.0.3\n        \n            @nestjs/event-emitter : ^1.3.1\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/schedule : ^2.1.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            bcrypt : ^5.0.1\n        \n            cache-manager : ^4.1.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            express-session : ^1.17.3\n        \n            mongoose : ^6.3.3\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.5.0\n        \n            typeorm : ^0.3.9\n        \n            zxcvbn : ^4.4.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../role.enum.ts)\n                        \n                        \n                            Status   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n    src/common/enum/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Status\n                    \n                \n                        \n                            \n                                 Available\n                            \n                        \n                        \n                            \n                                Value : available\n                            \n                        \n                        \n                            \n                                 NotAvailable\n                            \n                        \n                        \n                            \n                                Value : notAvailable\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nOrderModule\n\nOrderModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nUsersModule -->\n\nJwtStrategy->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OrderDocuments   (src/.../order.model.ts)\n                        \n                        \n                            ProductsDocuments   (src/.../products.model.ts)\n                        \n                        \n                            ProfileDocument   (src/.../profile.model.ts)\n                        \n                        \n                            UsersDocuments   (src/.../users.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/order/order.model.ts\n    \n    \n        \n            \n                \n                    \n                    OrderDocuments\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/products/products.model.ts\n    \n    \n        \n            \n                \n                    \n                    ProductsDocuments\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/model/profile.model.ts\n    \n    \n        \n            \n                \n                    \n                    ProfileDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/model/users.model.ts\n    \n    \n        \n            \n                \n                    \n                    UsersDocuments\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MESSAGES   (src/.../constans.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.model.ts)\n                        \n                        \n                            ProductsSchema   (src/.../products.model.ts)\n                        \n                        \n                            ProfileSchema   (src/.../profile.model.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            UsersSchema   (src/.../users.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constans/constans.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGES\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * common messages\n   */\n  EXPIRES_IN: '3600s',\n  CODE_ALREADY_EXIST: 11000,\n  CODE_ROLE: 'Users validation failed',\n  CODE_NOT_NULL: '23502',\n  CODE_NOT_DELETE: '23503',\n  VALIDATE_MESSAGE: 'message',\n  INTERNAL_SERVER_ERROR: 'There is internal server, Please try again',\n  NOT_FOUND: 'No data found',\n  DELETE_SUCCESS: 'Deleted successfully',\n  UPDATE_SUCCESS: 'Updated successfully',\n\n  /**\n   * User contstans\n   */\n  USER_NOT_FOUND: 'User not found',\n  PROFILE_NOT_FOUND: 'Profile not found',\n  USER_CREATE: 'User created',\n  EMAIL_EXIST: 'Email exists',\n  EMAIL_NOT_NULL: 'Email should not be null',\n  AUTH_FAILED: 'Invalid credentials',\n  USER_INVALID_ROLE: 'Invalid input value for role enum',\n  USER_FETCH_SUCCESS: 'Users fetched successfully',\n\n  /**\n   * Products constants\n   */\n  PRODUCT_NOT_FOUND: 'Products not found',\n  PRODUCT_NAME_EXIST: 'Products name already exists',\n  PRODUCT_NOT_NULL: 'Products name should not be null',\n  PRODUCT_ADDED_SUCCESS: 'Products addedd successfully',\n  PRODUCT_NOT_AVAILABLE: 'Products not available',\n\n  /**\n   * Orders constants\n   */\n  ORDER_NOT_FOUND: 'Order not found',\n  ORDER_NAME_EXIST: 'Order name already exists',\n  ORDER_NOT_NULL: 'Order name should not be null',\n  ORDER_ADDED_SUCCESS: 'Order Stored',\n  ORDER_NOT_AVAILABLE: 'Order not available',\n}\n                    \n                \n\n            \n                \n                    Constants message\n\n                \n            \n\n        \n    \n\n    src/order/order.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/products/products.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Products)\n                    \n                \n\n\n        \n    \n\n    src/users/model/profile.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProfileSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Profile)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/users/model/users.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Users)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
